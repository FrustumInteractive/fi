/*
*  Created by Roger Dass on 12-05-01.
*  Copyright 2012 Frustum Interactive. All rights reserved.
*  No warranty, explicit or implicit, provided.
*
*/

#ifndef _FI_EVENT_H
#define _FI_EVENT_H

namespace FI {
namespace GFX {

enum eMessage
{
	FI_MSG_NONE,

	FI_MSG_DEBUG_OCTREE_LINES,
	FI_MSG_DEBUG_AABB_LINES,

	FI_MSG_KEYDOWN,
	FI_MSG_KEYDOWN_UP,
	FI_MSG_KEYDOWN_DOWN,
	FI_MSG_KEYDOWN_LEFT,
	FI_MSG_KEYDOWN_RIGHT,
	FI_MSG_KEYDOWN_JUMP,

	FI_MSG_KEYUP,
	FI_MSG_KEYUP_UP,
	FI_MSG_KEYUP_DOWN,
	FI_MSG_KEYUP_LEFT,
	FI_MSG_KEYUP_RIGHT,
	FI_MSG_KEYUP_JUMP,

	FI_MSG_MOUSE_MOVED,
	FI_MSG_MOUSE_CLICKED_LEFT,
	FI_MSG_MOUSE_CLICKED_RIGHT,
	FI_MSG_MOUSE_CLICKED_MIDDLE,
	FI_MSG_MOUSE_RELEASED_LEFT,
	FI_MSG_MOUSE_RELEASED_MIDDLE,
	FI_MSG_MOUSE_RELEASED_RIGHT,
    
	FI_MSG_JOYSTICK_LOOK,
	FI_MSG_JOYSTICK_MOVE,

	FI_MSG_PLAYER_JUMP,
	FI_MSG_PLAYER_CROUCH,

	FI_MSG_PLAYER_DIED,
	FI_MSG_PLAYER_BURNED,
	FI_MSG_PLAYER_SHOCKED,
	FI_MSG_PLAYER_RUNNING,
	FI_MSG_PLAYER_SWIMMING,

	FI_MSG_MAP_FINISH,
	FI_MSG_MAP_CHECKPOINT,
	FI_MSG_MAP_START,

	FI_MSG_STATE_MENU,
	FI_MSG_STATE_TITLE,
	FI_MSG_STATE_INTRO,
	FI_MSG_STATE_PLAY,
	FI_MSG_STATE_ENDING,
	FI_MSG_STATE_CREDITS,

	FI_MSG_LOADING0,
	FI_MSG_LOADING1,
	FI_MSG_LOADING2,
	FI_MSG_LOADING3,
	FI_MSG_LOADING4,
	FI_MSG_LOADING5,
	FI_MSG_LOADING6,
	FI_MSG_LOADING7,
	FI_MSG_LOADING8,
	FI_MSG_LOADING9,

	FI_MSG_INTERRUPT,
	FI_MSG_INTERRUPT_LEVELSTART_PAUSE,
	FI_MSG_INTERRUPT_LEVELSTART_RESUME,
	FI_MSG_INTERRUPT_LEVELSUMMARY_PAUSE,
	FI_MSG_INTERRUPT_LEVELSUMMARY_RESUME,
	FI_MSG_INTERRUPT_TITLEINIT_PAUSE,
	FI_MSG_INTERRUPT_TITLEINIT_RESUME,
	FI_MSG_INTERRUPT_LOADINIT_PAUSE,
	FI_MSG_INTERRUPT_LOADINIT_RESUME,

	FI_MSG_QUIT
};


class Event
{
public:

	Event() :
		m_msg(FI_MSG_NONE),
		m_pData(0)
	{
	}

	Event(eMessage id, const void *pData) :
		m_msg(id),
		m_pData(pData)
	{ 
	}

private:

	eMessage m_msg;
	const void *m_pData;
};


} //NS GFX
} //NS FI

#endif
